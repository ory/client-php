<?php
/**
 * V0alpha2ApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers.
 *
 * The version of the OpenAPI document: v0.2.0-alpha.18
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ory\Client\Test\Api;

use \Ory\Client\Configuration;
use \Ory\Client\ApiException;
use \Ory\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * V0alpha2ApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ory\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class V0alpha2ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminAcceptOAuth2ConsentRequest
     *
     * Accept an OAuth 2.0 Consent Request.
     *
     */
    public function testAdminAcceptOAuth2ConsentRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminAcceptOAuth2LoginRequest
     *
     * Accept an OAuth 2.0 Login Request.
     *
     */
    public function testAdminAcceptOAuth2LoginRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminAcceptOAuth2LogoutRequest
     *
     * Accept an OAuth 2.0 Logout Request.
     *
     */
    public function testAdminAcceptOAuth2LogoutRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminCreateIdentity
     *
     * Create an Identity.
     *
     */
    public function testAdminCreateIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminCreateJsonWebKeySet
     *
     * Generate a New JSON Web Key.
     *
     */
    public function testAdminCreateJsonWebKeySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminCreateOAuth2Client
     *
     * Create an OAuth 2.0 Client.
     *
     */
    public function testAdminCreateOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminCreateSelfServiceRecoveryLink
     *
     * Create a Recovery Link.
     *
     */
    public function testAdminCreateSelfServiceRecoveryLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteIdentity
     *
     * Delete an Identity.
     *
     */
    public function testAdminDeleteIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteIdentitySessions
     *
     * Calling this endpoint irrecoverably and permanently deletes and invalidates all sessions that belong to the given Identity..
     *
     */
    public function testAdminDeleteIdentitySessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteJsonWebKey
     *
     * Delete a JSON Web Key.
     *
     */
    public function testAdminDeleteJsonWebKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteJsonWebKeySet
     *
     * Delete a JSON Web Key Set.
     *
     */
    public function testAdminDeleteJsonWebKeySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteOAuth2Client
     *
     * Deletes an OAuth 2.0 Client.
     *
     */
    public function testAdminDeleteOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteOAuth2Token
     *
     * Delete OAuth2 Access Tokens from a Client.
     *
     */
    public function testAdminDeleteOAuth2Token()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminDeleteTrustedOAuth2JwtGrantIssuer
     *
     * Delete a Trusted OAuth2 JWT Bearer Grant Type Issuer.
     *
     */
    public function testAdminDeleteTrustedOAuth2JwtGrantIssuer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminExtendSession
     *
     * Calling this endpoint extends the given session ID. If `session.earliest_possible_extend` is set it will only extend the session after the specified time has passed..
     *
     */
    public function testAdminExtendSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetIdentity
     *
     * Get an Identity.
     *
     */
    public function testAdminGetIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetJsonWebKey
     *
     * Fetch a JSON Web Key.
     *
     */
    public function testAdminGetJsonWebKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetJsonWebKeySet
     *
     * Retrieve a JSON Web Key Set.
     *
     */
    public function testAdminGetJsonWebKeySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetOAuth2Client
     *
     * Get an OAuth 2.0 Client.
     *
     */
    public function testAdminGetOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetOAuth2ConsentRequest
     *
     * Get OAuth 2.0 Consent Request Information.
     *
     */
    public function testAdminGetOAuth2ConsentRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetOAuth2LoginRequest
     *
     * Get an OAuth 2.0 Login Request.
     *
     */
    public function testAdminGetOAuth2LoginRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetOAuth2LogoutRequest
     *
     * Get an OAuth 2.0 Logout Request.
     *
     */
    public function testAdminGetOAuth2LogoutRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminGetTrustedOAuth2JwtGrantIssuer
     *
     * Get a Trusted OAuth2 JWT Bearer Grant Type Issuer.
     *
     */
    public function testAdminGetTrustedOAuth2JwtGrantIssuer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminIntrospectOAuth2Token
     *
     * Introspect OAuth2 Access or Refresh Tokens.
     *
     */
    public function testAdminIntrospectOAuth2Token()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminListIdentities
     *
     * List Identities.
     *
     */
    public function testAdminListIdentities()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminListIdentitySessions
     *
     * This endpoint returns all sessions that belong to the given Identity..
     *
     */
    public function testAdminListIdentitySessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminListOAuth2Clients
     *
     * List OAuth 2.0 Clients.
     *
     */
    public function testAdminListOAuth2Clients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminListOAuth2SubjectConsentSessions
     *
     * List OAuth 2.0 Consent Sessions of a Subject.
     *
     */
    public function testAdminListOAuth2SubjectConsentSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminListTrustedOAuth2JwtGrantIssuers
     *
     * List Trusted OAuth2 JWT Bearer Grant Type Issuers.
     *
     */
    public function testAdminListTrustedOAuth2JwtGrantIssuers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminPatchIdentity
     *
     * Partially updates an Identity's field using [JSON Patch](https://jsonpatch.com/).
     *
     */
    public function testAdminPatchIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminPatchOAuth2Client
     *
     * Patch an OAuth 2.0 Client.
     *
     */
    public function testAdminPatchOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRejectOAuth2ConsentRequest
     *
     * Reject an OAuth 2.0 Consent Request.
     *
     */
    public function testAdminRejectOAuth2ConsentRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRejectOAuth2LoginRequest
     *
     * Reject an OAuth 2.0 Login Request.
     *
     */
    public function testAdminRejectOAuth2LoginRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRejectOAuth2LogoutRequest
     *
     * Reject an OAuth 2.0 Logout Request.
     *
     */
    public function testAdminRejectOAuth2LogoutRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRevokeOAuth2ConsentSessions
     *
     * Revokes OAuth 2.0 Consent Sessions of a Subject for a Specific OAuth 2.0 Client.
     *
     */
    public function testAdminRevokeOAuth2ConsentSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRevokeOAuth2LoginSessions
     *
     * Invalidates All OAuth 2.0 Login Sessions of a Certain User.
     *
     */
    public function testAdminRevokeOAuth2LoginSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminTrustOAuth2JwtGrantIssuer
     *
     * Trust an OAuth2 JWT Bearer Grant Type Issuer.
     *
     */
    public function testAdminTrustOAuth2JwtGrantIssuer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminUpdateIdentity
     *
     * Update an Identity.
     *
     */
    public function testAdminUpdateIdentity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminUpdateJsonWebKey
     *
     * Update a JSON Web Key.
     *
     */
    public function testAdminUpdateJsonWebKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminUpdateJsonWebKeySet
     *
     * Update a JSON Web Key Set.
     *
     */
    public function testAdminUpdateJsonWebKeySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminUpdateOAuth2Client
     *
     * Update an OAuth 2.0 Client.
     *
     */
    public function testAdminUpdateOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createProject
     *
     * Create a Project.
     *
     */
    public function testCreateProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSelfServiceLogoutFlowUrlForBrowsers
     *
     * Create a Logout URL for Browsers.
     *
     */
    public function testCreateSelfServiceLogoutFlowUrlForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discoverJsonWebKeys
     *
     * Discover JSON Web Keys.
     *
     */
    public function testDiscoverJsonWebKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discoverOidcConfiguration
     *
     * OpenID Connect Discovery.
     *
     */
    public function testDiscoverOidcConfiguration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationCreateOAuth2Client
     *
     * Register an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationCreateOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationDeleteOAuth2Client
     *
     * Deletes an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationDeleteOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationGetOAuth2Client
     *
     * Get an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationGetOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dynamicClientRegistrationUpdateOAuth2Client
     *
     * Update an OAuth 2.0 Client using the OpenID / OAuth2 Dynamic Client Registration Management Protocol.
     *
     */
    public function testDynamicClientRegistrationUpdateOAuth2Client()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIdentitySchema
     *
     * .
     *
     */
    public function testGetIdentitySchema()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOidcUserInfo
     *
     * OpenID Connect Userinfo.
     *
     */
    public function testGetOidcUserInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProject
     *
     * Get a Project.
     *
     */
    public function testGetProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectMembers
     *
     * Get all members associated with this project..
     *
     */
    public function testGetProjectMembers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceError
     *
     * Get Self-Service Errors.
     *
     */
    public function testGetSelfServiceError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceLoginFlow
     *
     * Get Login Flow.
     *
     */
    public function testGetSelfServiceLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceRecoveryFlow
     *
     * Get Recovery Flow.
     *
     */
    public function testGetSelfServiceRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceRegistrationFlow
     *
     * Get Registration Flow.
     *
     */
    public function testGetSelfServiceRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceSettingsFlow
     *
     * Get Settings Flow.
     *
     */
    public function testGetSelfServiceSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfServiceVerificationFlow
     *
     * Get Verification Flow.
     *
     */
    public function testGetSelfServiceVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebAuthnJavaScript
     *
     * Get WebAuthn JavaScript.
     *
     */
    public function testGetWebAuthnJavaScript()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceLoginFlowForBrowsers
     *
     * Initialize Login Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceLoginFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceLoginFlowWithoutBrowser
     *
     * Initialize Login Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceLoginFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRecoveryFlowForBrowsers
     *
     * Initialize Recovery Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceRecoveryFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRecoveryFlowWithoutBrowser
     *
     * Initialize Recovery Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceRecoveryFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRegistrationFlowForBrowsers
     *
     * Initialize Registration Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceRegistrationFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceRegistrationFlowWithoutBrowser
     *
     * Initialize Registration Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceRegistrationFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceSettingsFlowForBrowsers
     *
     * Initialize Settings Flow for Browsers.
     *
     */
    public function testInitializeSelfServiceSettingsFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceSettingsFlowWithoutBrowser
     *
     * Initialize Settings Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceSettingsFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceVerificationFlowForBrowsers
     *
     * Initialize Verification Flow for Browser Clients.
     *
     */
    public function testInitializeSelfServiceVerificationFlowForBrowsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initializeSelfServiceVerificationFlowWithoutBrowser
     *
     * Initialize Verification Flow for APIs, Services, Apps, ....
     *
     */
    public function testInitializeSelfServiceVerificationFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIdentitySchemas
     *
     * .
     *
     */
    public function testListIdentitySchemas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listProjects
     *
     * List All Projects.
     *
     */
    public function testListProjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSessions
     *
     * This endpoints returns all other active sessions that belong to the logged-in user. The current session can be retrieved by calling the `/sessions/whoami` endpoint..
     *
     */
    public function testListSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchProject
     *
     * Patch an Ory Cloud Project Configuration`.
     *
     */
    public function testPatchProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for performOAuth2AuthorizationFlow
     *
     * The OAuth 2.0 Authorize Endpoint.
     *
     */
    public function testPerformOAuth2AuthorizationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for performOAuth2TokenFlow
     *
     * The OAuth 2.0 Token Endpoint.
     *
     */
    public function testPerformOAuth2TokenFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for performOidcFrontOrBackChannelLogout
     *
     * OpenID Connect Front- or Back-channel Enabled Logout.
     *
     */
    public function testPerformOidcFrontOrBackChannelLogout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for purgeProject
     *
     * Irrecoverably Purge a Project.
     *
     */
    public function testPurgeProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeProjectMember
     *
     * Remove a member associated with this project. This also sets their invite status to `REMOVED`..
     *
     */
    public function testRemoveProjectMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeOAuth2Token
     *
     * Revoke an OAuth2 Access or Refresh Token.
     *
     */
    public function testRevokeOAuth2Token()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeSession
     *
     * Calling this endpoint invalidates the specified session. The current session cannot be revoked. Session data are not deleted..
     *
     */
    public function testRevokeSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revokeSessions
     *
     * Calling this endpoint invalidates all except the current session that belong to the logged-in user. Session data are not deleted..
     *
     */
    public function testRevokeSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceLoginFlow
     *
     * Submit a Login Flow.
     *
     */
    public function testSubmitSelfServiceLoginFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceLogoutFlow
     *
     * Complete Self-Service Logout.
     *
     */
    public function testSubmitSelfServiceLogoutFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceLogoutFlowWithoutBrowser
     *
     * Perform Logout for APIs, Services, Apps, ....
     *
     */
    public function testSubmitSelfServiceLogoutFlowWithoutBrowser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceRecoveryFlow
     *
     * Complete Recovery Flow.
     *
     */
    public function testSubmitSelfServiceRecoveryFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceRegistrationFlow
     *
     * Submit a Registration Flow.
     *
     */
    public function testSubmitSelfServiceRegistrationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceSettingsFlow
     *
     * Complete Settings Flow.
     *
     */
    public function testSubmitSelfServiceSettingsFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for submitSelfServiceVerificationFlow
     *
     * Complete Verification Flow.
     *
     */
    public function testSubmitSelfServiceVerificationFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for toSession
     *
     * Check Who the Current HTTP Session Belongs To.
     *
     */
    public function testToSession()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProject
     *
     * Update an Ory Cloud Project Configuration.
     *
     */
    public function testUpdateProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
